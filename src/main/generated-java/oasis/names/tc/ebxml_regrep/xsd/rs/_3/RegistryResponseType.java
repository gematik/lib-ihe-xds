/*
 * Copyright 2023 gematik GmbH
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

//
// This file was generated by the Eclipse Implementation of JAXB, v3.0.2 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2023.07.11 at 06:21:54 PM CEST 
//


package oasis.names.tc.ebxml_regrep.xsd.rs._3;

import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlSchemaType;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.bind.annotation.XmlType;
import oasis.names.tc.ebxml_regrep.xsd.query._3.AdhocQueryResponse;
import oasis.names.tc.ebxml_regrep.xsd.rim._3.SlotListType;
import org.apache.commons.lang3.builder.ToStringBuilder;
import org.apache.cxf.xjc.runtime.JAXBToStringStyle;


/**
 * Base type for all ebXML Registry responses
 * 
 * <p>Java class for RegistryResponseType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="RegistryResponseType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="ResponseSlotList" type="{urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0}SlotListType" minOccurs="0"/&gt;
 *         &lt;element ref="{urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0}RegistryErrorList" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *       &lt;attribute name="status" use="required" type="{urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0}referenceURI" /&gt;
 *       &lt;attribute name="requestId" type="{http://www.w3.org/2001/XMLSchema}anyURI" /&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "RegistryResponseType", propOrder = {
    "responseSlotList",
    "registryErrorList"
})
@XmlSeeAlso({
    AdhocQueryResponse.class
})
public class RegistryResponseType {

    @XmlElement(name = "ResponseSlotList")
    protected SlotListType responseSlotList;
    @XmlElement(name = "RegistryErrorList")
    protected RegistryErrorList registryErrorList;
    @XmlAttribute(name = "status", required = true)
    protected String status;
    @XmlAttribute(name = "requestId")
    @XmlSchemaType(name = "anyURI")
    protected String requestId;

    /**
     * Gets the value of the responseSlotList property.
     * 
     * @return
     *     possible object is
     *     {@link oasis.names.tc.ebxml_regrep.xsd.rim._3.SlotListType }
     *     
     */
    public SlotListType getResponseSlotList() {
        return responseSlotList;
    }

    /**
     * Sets the value of the responseSlotList property.
     * 
     * @param value
     *     allowed object is
     *     {@link oasis.names.tc.ebxml_regrep.xsd.rim._3.SlotListType }
     *     
     */
    public void setResponseSlotList(SlotListType value) {
        this.responseSlotList = value;
    }

    /**
     * Gets the value of the registryErrorList property.
     * 
     * @return
     *     possible object is
     *     {@link RegistryErrorList }
     *     
     */
    public RegistryErrorList getRegistryErrorList() {
        return registryErrorList;
    }

    /**
     * Sets the value of the registryErrorList property.
     * 
     * @param value
     *     allowed object is
     *     {@link RegistryErrorList }
     *     
     */
    public void setRegistryErrorList(RegistryErrorList value) {
        this.registryErrorList = value;
    }

    /**
     * Gets the value of the status property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getStatus() {
        return status;
    }

    /**
     * Sets the value of the status property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setStatus(String value) {
        this.status = value;
    }

    /**
     * Gets the value of the requestId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getRequestId() {
        return requestId;
    }

    /**
     * Sets the value of the requestId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRequestId(String value) {
        this.requestId = value;
    }

    public RegistryResponseType withResponseSlotList(SlotListType value) {
        setResponseSlotList(value);
        return this;
    }

    public RegistryResponseType withRegistryErrorList(RegistryErrorList value) {
        setRegistryErrorList(value);
        return this;
    }

    public RegistryResponseType withStatus(String value) {
        setStatus(value);
        return this;
    }

    public RegistryResponseType withRequestId(String value) {
        setRequestId(value);
        return this;
    }

    @Override
    public boolean equals(Object object) {
        if ((object == null)||(this.getClass()!= object.getClass())) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final RegistryResponseType that = ((RegistryResponseType) object);
        {
            SlotListType leftResponseSlotList;
            leftResponseSlotList = this.getResponseSlotList();
            SlotListType rightResponseSlotList;
            rightResponseSlotList = that.getResponseSlotList();
            if (this.responseSlotList!= null) {
                if (that.responseSlotList!= null) {
                    if (!leftResponseSlotList.equals(rightResponseSlotList)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.responseSlotList!= null) {
                    return false;
                }
            }
        }
        {
            RegistryErrorList leftRegistryErrorList;
            leftRegistryErrorList = this.getRegistryErrorList();
            RegistryErrorList rightRegistryErrorList;
            rightRegistryErrorList = that.getRegistryErrorList();
            if (this.registryErrorList!= null) {
                if (that.registryErrorList!= null) {
                    if (!leftRegistryErrorList.equals(rightRegistryErrorList)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.registryErrorList!= null) {
                    return false;
                }
            }
        }
        {
            String leftStatus;
            leftStatus = this.getStatus();
            String rightStatus;
            rightStatus = that.getStatus();
            if (this.status!= null) {
                if (that.status!= null) {
                    if (!leftStatus.equals(rightStatus)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.status!= null) {
                    return false;
                }
            }
        }
        {
            String leftRequestId;
            leftRequestId = this.getRequestId();
            String rightRequestId;
            rightRequestId = that.getRequestId();
            if (this.requestId!= null) {
                if (that.requestId!= null) {
                    if (!leftRequestId.equals(rightRequestId)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.requestId!= null) {
                    return false;
                }
            }
        }
        return true;
    }

    @Override
    public int hashCode() {
        int currentHashCode = 1;
        {
            currentHashCode = (currentHashCode* 31);
            SlotListType theResponseSlotList;
            theResponseSlotList = this.getResponseSlotList();
            if (this.responseSlotList!= null) {
                currentHashCode += theResponseSlotList.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            RegistryErrorList theRegistryErrorList;
            theRegistryErrorList = this.getRegistryErrorList();
            if (this.registryErrorList!= null) {
                currentHashCode += theRegistryErrorList.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            String theStatus;
            theStatus = this.getStatus();
            if (this.status!= null) {
                currentHashCode += theStatus.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            String theRequestId;
            theRequestId = this.getRequestId();
            if (this.requestId!= null) {
                currentHashCode += theRequestId.hashCode();
            }
        }
        return currentHashCode;
    }

    /**
     * Generates a String representation of the contents of this type.
     * This is an extension method, produced by the 'ts' xjc plugin
     * 
     */
    @Override
    public String toString() {
        return ToStringBuilder.reflectionToString(this, JAXBToStringStyle.DEFAULT_STYLE);
    }

}
