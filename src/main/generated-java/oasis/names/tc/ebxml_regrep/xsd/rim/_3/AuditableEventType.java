/*-
 * #%L
 * lib-ihe-xds
 * %%
 * Copyright (C) 2023 - 2025 gematik GmbH
 * %%
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 
 * *******
 * 
 * For additional notes and disclaimer from gematik and in case of changes by gematik find details in the "Readme" file.
 * #L%
 */
//
// This file was generated by the Eclipse Implementation of JAXB, v3.0.2 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2023.07.11 at 06:21:54 PM CEST 
//


package oasis.names.tc.ebxml_regrep.xsd.rim._3;


import java.util.Collection;
import javax.xml.datatype.XMLGregorianCalendar;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlSchemaType;
import jakarta.xml.bind.annotation.XmlType;
import org.apache.commons.lang3.builder.ToStringBuilder;
import org.apache.cxf.xjc.runtime.JAXBToStringStyle;


/**
 * An Event that forms an audit trail in ebXML Registry.
 * 
 * <p>Java class for AuditableEventType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="AuditableEventType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0}RegistryObjectType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="affectedObjects" type="{urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0}ObjectRefListType"/&gt;
 *       &lt;/sequence&gt;
 *       &lt;attribute name="eventType" use="required" type="{urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0}referenceURI" /&gt;
 *       &lt;attribute name="timestamp" use="required" type="{http://www.w3.org/2001/XMLSchema}dateTime" /&gt;
 *       &lt;attribute name="user" use="required" type="{urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0}referenceURI" /&gt;
 *       &lt;attribute name="requestId" use="required" type="{urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0}referenceURI" /&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "AuditableEventType", propOrder = {
    "affectedObjects"
})
public class AuditableEventType
    extends RegistryObjectType
{

    @XmlElement(required = true)
    protected ObjectRefListType affectedObjects;
    @XmlAttribute(name = "eventType", required = true)
    protected String eventType;
    @XmlAttribute(name = "timestamp", required = true)
    @XmlSchemaType(name = "dateTime")
    protected XMLGregorianCalendar timestamp;
    @XmlAttribute(name = "user", required = true)
    protected String user;
    @XmlAttribute(name = "requestId", required = true)
    protected String requestId;

    /**
     * Gets the value of the affectedObjects property.
     * 
     * @return
     *     possible object is
     *     {@link ObjectRefListType }
     *     
     */
    public ObjectRefListType getAffectedObjects() {
        return affectedObjects;
    }

    /**
     * Sets the value of the affectedObjects property.
     * 
     * @param value
     *     allowed object is
     *     {@link ObjectRefListType }
     *     
     */
    public void setAffectedObjects(ObjectRefListType value) {
        this.affectedObjects = value;
    }

    /**
     * Gets the value of the eventType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEventType() {
        return eventType;
    }

    /**
     * Sets the value of the eventType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEventType(String value) {
        this.eventType = value;
    }

    /**
     * Gets the value of the timestamp property.
     * 
     * @return
     *     possible object is
     *     {@link javax.xml.datatype.XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getTimestamp() {
        return timestamp;
    }

    /**
     * Sets the value of the timestamp property.
     * 
     * @param value
     *     allowed object is
     *     {@link javax.xml.datatype.XMLGregorianCalendar }
     *     
     */
    public void setTimestamp(XMLGregorianCalendar value) {
        this.timestamp = value;
    }

    /**
     * Gets the value of the user property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getUser() {
        return user;
    }

    /**
     * Sets the value of the user property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setUser(String value) {
        this.user = value;
    }

    /**
     * Gets the value of the requestId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getRequestId() {
        return requestId;
    }

    /**
     * Sets the value of the requestId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRequestId(String value) {
        this.requestId = value;
    }

    public AuditableEventType withAffectedObjects(ObjectRefListType value) {
        setAffectedObjects(value);
        return this;
    }

    public AuditableEventType withEventType(String value) {
        setEventType(value);
        return this;
    }

    public AuditableEventType withTimestamp(XMLGregorianCalendar value) {
        setTimestamp(value);
        return this;
    }

    public AuditableEventType withUser(String value) {
        setUser(value);
        return this;
    }

    public AuditableEventType withRequestId(String value) {
        setRequestId(value);
        return this;
    }

    @Override
    public AuditableEventType withName(InternationalStringType value) {
        setName(value);
        return this;
    }

    @Override
    public AuditableEventType withDescription(InternationalStringType value) {
        setDescription(value);
        return this;
    }

    @Override
    public AuditableEventType withVersionInfo(VersionInfoType value) {
        setVersionInfo(value);
        return this;
    }

    @Override
    public AuditableEventType withClassification(ClassificationType... values) {
        if (values!= null) {
            for (ClassificationType value: values) {
                getClassification().add(value);
            }
        }
        return this;
    }

    @Override
    public AuditableEventType withClassification(Collection<ClassificationType> values) {
        if (values!= null) {
            getClassification().addAll(values);
        }
        return this;
    }

    @Override
    public AuditableEventType withExternalIdentifier(ExternalIdentifierType... values) {
        if (values!= null) {
            for (ExternalIdentifierType value: values) {
                getExternalIdentifier().add(value);
            }
        }
        return this;
    }

    @Override
    public AuditableEventType withExternalIdentifier(Collection<ExternalIdentifierType> values) {
        if (values!= null) {
            getExternalIdentifier().addAll(values);
        }
        return this;
    }

    @Override
    public AuditableEventType withLid(String value) {
        setLid(value);
        return this;
    }

    @Override
    public AuditableEventType withObjectType(String value) {
        setObjectType(value);
        return this;
    }

    @Override
    public AuditableEventType withStatus(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public AuditableEventType withSlot(SlotType1 ... values) {
        if (values!= null) {
            for (SlotType1 value: values) {
                getSlot().add(value);
            }
        }
        return this;
    }

    @Override
    public AuditableEventType withSlot(Collection<SlotType1> values) {
        if (values!= null) {
            getSlot().addAll(values);
        }
        return this;
    }

    @Override
    public AuditableEventType withId(String value) {
        setId(value);
        return this;
    }

    @Override
    public AuditableEventType withHome(String value) {
        setHome(value);
        return this;
    }

    @Override
    public boolean equals(Object object) {
        if ((object == null)||(this.getClass()!= object.getClass())) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(object)) {
            return false;
        }
        final AuditableEventType that = ((AuditableEventType) object);
        {
            ObjectRefListType leftAffectedObjects;
            leftAffectedObjects = this.getAffectedObjects();
            ObjectRefListType rightAffectedObjects;
            rightAffectedObjects = that.getAffectedObjects();
            if (this.affectedObjects!= null) {
                if (that.affectedObjects!= null) {
                    if (!leftAffectedObjects.equals(rightAffectedObjects)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.affectedObjects!= null) {
                    return false;
                }
            }
        }
        {
            String leftEventType;
            leftEventType = this.getEventType();
            String rightEventType;
            rightEventType = that.getEventType();
            if (this.eventType!= null) {
                if (that.eventType!= null) {
                    if (!leftEventType.equals(rightEventType)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.eventType!= null) {
                    return false;
                }
            }
        }
        {
            XMLGregorianCalendar leftTimestamp;
            leftTimestamp = this.getTimestamp();
            XMLGregorianCalendar rightTimestamp;
            rightTimestamp = that.getTimestamp();
            if (this.timestamp!= null) {
                if (that.timestamp!= null) {
                    if (!leftTimestamp.equals(rightTimestamp)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.timestamp!= null) {
                    return false;
                }
            }
        }
        {
            String leftUser;
            leftUser = this.getUser();
            String rightUser;
            rightUser = that.getUser();
            if (this.user!= null) {
                if (that.user!= null) {
                    if (!leftUser.equals(rightUser)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.user!= null) {
                    return false;
                }
            }
        }
        {
            String leftRequestId;
            leftRequestId = this.getRequestId();
            String rightRequestId;
            rightRequestId = that.getRequestId();
            if (this.requestId!= null) {
                if (that.requestId!= null) {
                    if (!leftRequestId.equals(rightRequestId)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.requestId!= null) {
                    return false;
                }
            }
        }
        return true;
    }

    @Override
    public int hashCode() {
        int currentHashCode = 1;
        currentHashCode = ((currentHashCode* 31)+ super.hashCode());
        {
            currentHashCode = (currentHashCode* 31);
            ObjectRefListType theAffectedObjects;
            theAffectedObjects = this.getAffectedObjects();
            if (this.affectedObjects!= null) {
                currentHashCode += theAffectedObjects.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            String theEventType;
            theEventType = this.getEventType();
            if (this.eventType!= null) {
                currentHashCode += theEventType.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            XMLGregorianCalendar theTimestamp;
            theTimestamp = this.getTimestamp();
            if (this.timestamp!= null) {
                currentHashCode += theTimestamp.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            String theUser;
            theUser = this.getUser();
            if (this.user!= null) {
                currentHashCode += theUser.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            String theRequestId;
            theRequestId = this.getRequestId();
            if (this.requestId!= null) {
                currentHashCode += theRequestId.hashCode();
            }
        }
        return currentHashCode;
    }

    /**
     * Generates a String representation of the contents of this type.
     * This is an extension method, produced by the 'ts' xjc plugin
     * 
     */
    @Override
    public String toString() {
        return ToStringBuilder.reflectionToString(this, JAXBToStringStyle.DEFAULT_STYLE);
    }

}
