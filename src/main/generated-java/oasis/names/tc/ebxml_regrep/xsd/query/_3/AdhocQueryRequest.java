/*
 * Copyright 2023 gematik GmbH
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

//
// This file was generated by the Eclipse Implementation of JAXB, v3.0.2 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2023.07.11 at 06:21:54 PM CEST 
//


package oasis.names.tc.ebxml_regrep.xsd.query._3;

import java.math.BigInteger;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlSchemaType;
import jakarta.xml.bind.annotation.XmlType;
import oasis.names.tc.ebxml_regrep.xsd.rim._3.AdhocQueryType;
import oasis.names.tc.ebxml_regrep.xsd.rim._3.SlotListType;
import oasis.names.tc.ebxml_regrep.xsd.rs._3.RegistryRequestType;
import org.apache.commons.lang3.builder.ToStringBuilder;
import org.apache.cxf.xjc.runtime.JAXBToStringStyle;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0}RegistryRequestType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0}ResponseOption"/&gt;
 *         &lt;element ref="{urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0}AdhocQuery"/&gt;
 *       &lt;/sequence&gt;
 *       &lt;attribute name="federated" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" /&gt;
 *       &lt;attribute name="federation" type="{http://www.w3.org/2001/XMLSchema}anyURI" /&gt;
 *       &lt;attribute name="startIndex" type="{http://www.w3.org/2001/XMLSchema}integer" default="0" /&gt;
 *       &lt;attribute name="maxResults" type="{http://www.w3.org/2001/XMLSchema}integer" default="-1" /&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "responseOption",
    "adhocQuery"
})
@XmlRootElement(name = "AdhocQueryRequest")
public class AdhocQueryRequest
    extends RegistryRequestType
{

    @XmlElement(name = "ResponseOption", required = true)
    protected ResponseOptionType responseOption;
    @XmlElement(name = "AdhocQuery", namespace = "urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0", required = true)
    protected AdhocQueryType adhocQuery;
    @XmlAttribute(name = "federated")
    protected Boolean federated;
    @XmlAttribute(name = "federation")
    @XmlSchemaType(name = "anyURI")
    protected String federation;
    @XmlAttribute(name = "startIndex")
    protected BigInteger startIndex;
    @XmlAttribute(name = "maxResults")
    protected BigInteger maxResults;

    /**
     * Gets the value of the responseOption property.
     * 
     * @return
     *     possible object is
     *     {@link ResponseOptionType }
     *     
     */
    public ResponseOptionType getResponseOption() {
        return responseOption;
    }

    /**
     * Sets the value of the responseOption property.
     * 
     * @param value
     *     allowed object is
     *     {@link ResponseOptionType }
     *     
     */
    public void setResponseOption(ResponseOptionType value) {
        this.responseOption = value;
    }

    /**
     * Gets the value of the adhocQuery property.
     * 
     * @return
     *     possible object is
     *     {@link oasis.names.tc.ebxml_regrep.xsd.rim._3.AdhocQueryType }
     *     
     */
    public AdhocQueryType getAdhocQuery() {
        return adhocQuery;
    }

    /**
     * Sets the value of the adhocQuery property.
     * 
     * @param value
     *     allowed object is
     *     {@link oasis.names.tc.ebxml_regrep.xsd.rim._3.AdhocQueryType }
     *     
     */
    public void setAdhocQuery(AdhocQueryType value) {
        this.adhocQuery = value;
    }

    /**
     * Gets the value of the federated property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isFederated() {
        if (federated == null) {
            return false;
        } else {
            return federated;
        }
    }

    /**
     * Sets the value of the federated property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setFederated(Boolean value) {
        this.federated = value;
    }

    /**
     * Gets the value of the federation property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFederation() {
        return federation;
    }

    /**
     * Sets the value of the federation property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFederation(String value) {
        this.federation = value;
    }

    /**
     * Gets the value of the startIndex property.
     * 
     * @return
     *     possible object is
     *     {@link java.math.BigInteger }
     *     
     */
    public BigInteger getStartIndex() {
        if (startIndex == null) {
            return new BigInteger("0");
        } else {
            return startIndex;
        }
    }

    /**
     * Sets the value of the startIndex property.
     * 
     * @param value
     *     allowed object is
     *     {@link java.math.BigInteger }
     *     
     */
    public void setStartIndex(BigInteger value) {
        this.startIndex = value;
    }

    /**
     * Gets the value of the maxResults property.
     * 
     * @return
     *     possible object is
     *     {@link java.math.BigInteger }
     *     
     */
    public BigInteger getMaxResults() {
        if (maxResults == null) {
            return new BigInteger("-1");
        } else {
            return maxResults;
        }
    }

    /**
     * Sets the value of the maxResults property.
     * 
     * @param value
     *     allowed object is
     *     {@link java.math.BigInteger }
     *     
     */
    public void setMaxResults(BigInteger value) {
        this.maxResults = value;
    }

    public AdhocQueryRequest withResponseOption(ResponseOptionType value) {
        setResponseOption(value);
        return this;
    }

    public AdhocQueryRequest withAdhocQuery(AdhocQueryType value) {
        setAdhocQuery(value);
        return this;
    }

    public AdhocQueryRequest withFederated(Boolean value) {
        setFederated(value);
        return this;
    }

    public AdhocQueryRequest withFederation(String value) {
        setFederation(value);
        return this;
    }

    public AdhocQueryRequest withStartIndex(BigInteger value) {
        setStartIndex(value);
        return this;
    }

    public AdhocQueryRequest withMaxResults(BigInteger value) {
        setMaxResults(value);
        return this;
    }

    @Override
    public AdhocQueryRequest withRequestSlotList(SlotListType value) {
        setRequestSlotList(value);
        return this;
    }

    @Override
    public AdhocQueryRequest withId(String value) {
        setId(value);
        return this;
    }

    @Override
    public AdhocQueryRequest withComment(String value) {
        setComment(value);
        return this;
    }

    @Override
    public boolean equals(Object object) {
        if ((object == null)||(this.getClass()!= object.getClass())) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(object)) {
            return false;
        }
        final AdhocQueryRequest that = ((AdhocQueryRequest) object);
        {
            ResponseOptionType leftResponseOption;
            leftResponseOption = this.getResponseOption();
            ResponseOptionType rightResponseOption;
            rightResponseOption = that.getResponseOption();
            if (this.responseOption!= null) {
                if (that.responseOption!= null) {
                    if (!leftResponseOption.equals(rightResponseOption)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.responseOption!= null) {
                    return false;
                }
            }
        }
        {
            AdhocQueryType leftAdhocQuery;
            leftAdhocQuery = this.getAdhocQuery();
            AdhocQueryType rightAdhocQuery;
            rightAdhocQuery = that.getAdhocQuery();
            if (this.adhocQuery!= null) {
                if (that.adhocQuery!= null) {
                    if (!leftAdhocQuery.equals(rightAdhocQuery)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.adhocQuery!= null) {
                    return false;
                }
            }
        }
        {
            boolean leftFederated;
            leftFederated = ((this.federated!= null)?this.isFederated():false);
            boolean rightFederated;
            rightFederated = ((that.federated!= null)?that.isFederated():false);
            if (this.federated!= null) {
                if (that.federated!= null) {
                    if (leftFederated!= rightFederated) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.federated!= null) {
                    return false;
                }
            }
        }
        {
            String leftFederation;
            leftFederation = this.getFederation();
            String rightFederation;
            rightFederation = that.getFederation();
            if (this.federation!= null) {
                if (that.federation!= null) {
                    if (!leftFederation.equals(rightFederation)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.federation!= null) {
                    return false;
                }
            }
        }
        {
            BigInteger leftStartIndex;
            leftStartIndex = this.getStartIndex();
            BigInteger rightStartIndex;
            rightStartIndex = that.getStartIndex();
            if (this.startIndex!= null) {
                if (that.startIndex!= null) {
                    if (!leftStartIndex.equals(rightStartIndex)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.startIndex!= null) {
                    return false;
                }
            }
        }
        {
            BigInteger leftMaxResults;
            leftMaxResults = this.getMaxResults();
            BigInteger rightMaxResults;
            rightMaxResults = that.getMaxResults();
            if (this.maxResults!= null) {
                if (that.maxResults!= null) {
                    if (!leftMaxResults.equals(rightMaxResults)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.maxResults!= null) {
                    return false;
                }
            }
        }
        return true;
    }

    @Override
    public int hashCode() {
        int currentHashCode = 1;
        currentHashCode = ((currentHashCode* 31)+ super.hashCode());
        {
            currentHashCode = (currentHashCode* 31);
            ResponseOptionType theResponseOption;
            theResponseOption = this.getResponseOption();
            if (this.responseOption!= null) {
                currentHashCode += theResponseOption.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            AdhocQueryType theAdhocQuery;
            theAdhocQuery = this.getAdhocQuery();
            if (this.adhocQuery!= null) {
                currentHashCode += theAdhocQuery.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            boolean theFederated;
            theFederated = ((this.federated!= null)?this.isFederated():false);
            if (this.federated!= null) {
                currentHashCode += (theFederated? 1231 : 1237);
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            String theFederation;
            theFederation = this.getFederation();
            if (this.federation!= null) {
                currentHashCode += theFederation.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            BigInteger theStartIndex;
            theStartIndex = this.getStartIndex();
            if (this.startIndex!= null) {
                currentHashCode += theStartIndex.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            BigInteger theMaxResults;
            theMaxResults = this.getMaxResults();
            if (this.maxResults!= null) {
                currentHashCode += theMaxResults.hashCode();
            }
        }
        return currentHashCode;
    }

    /**
     * Generates a String representation of the contents of this type.
     * This is an extension method, produced by the 'ts' xjc plugin
     * 
     */
    @Override
    public String toString() {
        return ToStringBuilder.reflectionToString(this, JAXBToStringStyle.DEFAULT_STYLE);
    }

}
