/*-
 * #%L
 * lib-ihe-xds
 * %%
 * Copyright (C) 2023 - 2025 gematik GmbH
 * %%
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 
 * *******
 * 
 * For additional notes and disclaimer from gematik and in case of changes by gematik find details in the "Readme" file.
 * #L%
 */
//
// This file was generated by the Eclipse Implementation of JAXB, v3.0.2 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2023.07.11 at 06:21:54 PM CEST 
//


package oasis.names.tc.ebxml_regrep.xsd.rim._3;


import java.util.Collection;
import javax.xml.datatype.Duration;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlType;
import jakarta.xml.bind.annotation.adapters.CollapsedStringAdapter;
import jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import org.apache.commons.lang3.builder.ToStringBuilder;
import org.apache.cxf.xjc.runtime.JAXBToStringStyle;


/**
 * Mapping of the same named interface in ebRIM.
 * 
 * <p>Java class for RegistryType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="RegistryType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0}RegistryObjectType"&gt;
 *       &lt;attribute name="operator" use="required" type="{urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0}referenceURI" /&gt;
 *       &lt;attribute name="specificationVersion" use="required" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *       &lt;attribute name="replicationSyncLatency" type="{http://www.w3.org/2001/XMLSchema}duration" default="P1D" /&gt;
 *       &lt;attribute name="catalogingLatency" type="{http://www.w3.org/2001/XMLSchema}duration" default="P1D" /&gt;
 *       &lt;attribute name="conformanceProfile" default="registryLite"&gt;
 *         &lt;simpleType&gt;
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NCName"&gt;
 *             &lt;enumeration value="registryFull"/&gt;
 *             &lt;enumeration value="registryLite"/&gt;
 *           &lt;/restriction&gt;
 *         &lt;/simpleType&gt;
 *       &lt;/attribute&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "RegistryType")
public class RegistryType
    extends RegistryObjectType
{

    @XmlAttribute(name = "operator", required = true)
    protected String operator;
    @XmlAttribute(name = "specificationVersion", required = true)
    protected String specificationVersion;
    @XmlAttribute(name = "replicationSyncLatency")
    protected Duration replicationSyncLatency;
    @XmlAttribute(name = "catalogingLatency")
    protected Duration catalogingLatency;
    @XmlAttribute(name = "conformanceProfile")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String conformanceProfile;

    /**
     * Gets the value of the operator property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getOperator() {
        return operator;
    }

    /**
     * Sets the value of the operator property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setOperator(String value) {
        this.operator = value;
    }

    /**
     * Gets the value of the specificationVersion property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSpecificationVersion() {
        return specificationVersion;
    }

    /**
     * Sets the value of the specificationVersion property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSpecificationVersion(String value) {
        this.specificationVersion = value;
    }

    /**
     * Gets the value of the replicationSyncLatency property.
     * 
     * @return
     *     possible object is
     *     {@link javax.xml.datatype.Duration }
     *     
     */
    public Duration getReplicationSyncLatency() {
        return replicationSyncLatency;
    }

    /**
     * Sets the value of the replicationSyncLatency property.
     * 
     * @param value
     *     allowed object is
     *     {@link javax.xml.datatype.Duration }
     *     
     */
    public void setReplicationSyncLatency(Duration value) {
        this.replicationSyncLatency = value;
    }

    /**
     * Gets the value of the catalogingLatency property.
     * 
     * @return
     *     possible object is
     *     {@link javax.xml.datatype.Duration }
     *     
     */
    public Duration getCatalogingLatency() {
        return catalogingLatency;
    }

    /**
     * Sets the value of the catalogingLatency property.
     * 
     * @param value
     *     allowed object is
     *     {@link javax.xml.datatype.Duration }
     *     
     */
    public void setCatalogingLatency(Duration value) {
        this.catalogingLatency = value;
    }

    /**
     * Gets the value of the conformanceProfile property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getConformanceProfile() {
        if (conformanceProfile == null) {
            return "registryLite";
        } else {
            return conformanceProfile;
        }
    }

    /**
     * Sets the value of the conformanceProfile property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setConformanceProfile(String value) {
        this.conformanceProfile = value;
    }

    public RegistryType withOperator(String value) {
        setOperator(value);
        return this;
    }

    public RegistryType withSpecificationVersion(String value) {
        setSpecificationVersion(value);
        return this;
    }

    public RegistryType withReplicationSyncLatency(Duration value) {
        setReplicationSyncLatency(value);
        return this;
    }

    public RegistryType withCatalogingLatency(Duration value) {
        setCatalogingLatency(value);
        return this;
    }

    public RegistryType withConformanceProfile(String value) {
        setConformanceProfile(value);
        return this;
    }

    @Override
    public RegistryType withName(InternationalStringType value) {
        setName(value);
        return this;
    }

    @Override
    public RegistryType withDescription(InternationalStringType value) {
        setDescription(value);
        return this;
    }

    @Override
    public RegistryType withVersionInfo(VersionInfoType value) {
        setVersionInfo(value);
        return this;
    }

    @Override
    public RegistryType withClassification(ClassificationType... values) {
        if (values!= null) {
            for (ClassificationType value: values) {
                getClassification().add(value);
            }
        }
        return this;
    }

    @Override
    public RegistryType withClassification(Collection<ClassificationType> values) {
        if (values!= null) {
            getClassification().addAll(values);
        }
        return this;
    }

    @Override
    public RegistryType withExternalIdentifier(ExternalIdentifierType... values) {
        if (values!= null) {
            for (ExternalIdentifierType value: values) {
                getExternalIdentifier().add(value);
            }
        }
        return this;
    }

    @Override
    public RegistryType withExternalIdentifier(Collection<ExternalIdentifierType> values) {
        if (values!= null) {
            getExternalIdentifier().addAll(values);
        }
        return this;
    }

    @Override
    public RegistryType withLid(String value) {
        setLid(value);
        return this;
    }

    @Override
    public RegistryType withObjectType(String value) {
        setObjectType(value);
        return this;
    }

    @Override
    public RegistryType withStatus(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public RegistryType withSlot(SlotType1 ... values) {
        if (values!= null) {
            for (SlotType1 value: values) {
                getSlot().add(value);
            }
        }
        return this;
    }

    @Override
    public RegistryType withSlot(Collection<SlotType1> values) {
        if (values!= null) {
            getSlot().addAll(values);
        }
        return this;
    }

    @Override
    public RegistryType withId(String value) {
        setId(value);
        return this;
    }

    @Override
    public RegistryType withHome(String value) {
        setHome(value);
        return this;
    }

    @Override
    public boolean equals(Object object) {
        if ((object == null)||(this.getClass()!= object.getClass())) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(object)) {
            return false;
        }
        final RegistryType that = ((RegistryType) object);
        {
            String leftOperator;
            leftOperator = this.getOperator();
            String rightOperator;
            rightOperator = that.getOperator();
            if (this.operator!= null) {
                if (that.operator!= null) {
                    if (!leftOperator.equals(rightOperator)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.operator!= null) {
                    return false;
                }
            }
        }
        {
            String leftSpecificationVersion;
            leftSpecificationVersion = this.getSpecificationVersion();
            String rightSpecificationVersion;
            rightSpecificationVersion = that.getSpecificationVersion();
            if (this.specificationVersion!= null) {
                if (that.specificationVersion!= null) {
                    if (!leftSpecificationVersion.equals(rightSpecificationVersion)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.specificationVersion!= null) {
                    return false;
                }
            }
        }
        {
            Duration leftReplicationSyncLatency;
            leftReplicationSyncLatency = this.getReplicationSyncLatency();
            Duration rightReplicationSyncLatency;
            rightReplicationSyncLatency = that.getReplicationSyncLatency();
            if (this.replicationSyncLatency!= null) {
                if (that.replicationSyncLatency!= null) {
                    if (!leftReplicationSyncLatency.equals(rightReplicationSyncLatency)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.replicationSyncLatency!= null) {
                    return false;
                }
            }
        }
        {
            Duration leftCatalogingLatency;
            leftCatalogingLatency = this.getCatalogingLatency();
            Duration rightCatalogingLatency;
            rightCatalogingLatency = that.getCatalogingLatency();
            if (this.catalogingLatency!= null) {
                if (that.catalogingLatency!= null) {
                    if (!leftCatalogingLatency.equals(rightCatalogingLatency)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.catalogingLatency!= null) {
                    return false;
                }
            }
        }
        {
            String leftConformanceProfile;
            leftConformanceProfile = this.getConformanceProfile();
            String rightConformanceProfile;
            rightConformanceProfile = that.getConformanceProfile();
            if (this.conformanceProfile!= null) {
                if (that.conformanceProfile!= null) {
                    if (!leftConformanceProfile.equals(rightConformanceProfile)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.conformanceProfile!= null) {
                    return false;
                }
            }
        }
        return true;
    }

    @Override
    public int hashCode() {
        int currentHashCode = 1;
        currentHashCode = ((currentHashCode* 31)+ super.hashCode());
        {
            currentHashCode = (currentHashCode* 31);
            String theOperator;
            theOperator = this.getOperator();
            if (this.operator!= null) {
                currentHashCode += theOperator.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            String theSpecificationVersion;
            theSpecificationVersion = this.getSpecificationVersion();
            if (this.specificationVersion!= null) {
                currentHashCode += theSpecificationVersion.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            Duration theReplicationSyncLatency;
            theReplicationSyncLatency = this.getReplicationSyncLatency();
            if (this.replicationSyncLatency!= null) {
                currentHashCode += theReplicationSyncLatency.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            Duration theCatalogingLatency;
            theCatalogingLatency = this.getCatalogingLatency();
            if (this.catalogingLatency!= null) {
                currentHashCode += theCatalogingLatency.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            String theConformanceProfile;
            theConformanceProfile = this.getConformanceProfile();
            if (this.conformanceProfile!= null) {
                currentHashCode += theConformanceProfile.hashCode();
            }
        }
        return currentHashCode;
    }

    /**
     * Generates a String representation of the contents of this type.
     * This is an extension method, produced by the 'ts' xjc plugin
     * 
     */
    @Override
    public String toString() {
        return ToStringBuilder.reflectionToString(this, JAXBToStringStyle.DEFAULT_STYLE);
    }

}
