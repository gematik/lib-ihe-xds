/*
 * Copyright 2023 gematik GmbH
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

//
// This file was generated by the Eclipse Implementation of JAXB, v3.0.2 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2023.07.11 at 06:21:54 PM CEST 
//


package oasis.names.tc.ebxml_regrep.xsd.rim._3;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import jakarta.xml.bind.JAXBElement;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlElementRef;
import jakarta.xml.bind.annotation.XmlType;
import org.apache.commons.lang3.builder.ToStringBuilder;
import org.apache.cxf.xjc.runtime.JAXBToStringStyle;


/**
 * <p>Java class for RegistryObjectListType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="RegistryObjectListType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0}Identifiable" maxOccurs="unbounded" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "RegistryObjectListType", propOrder = {
    "identifiable"
})
public class RegistryObjectListType {

    @XmlElementRef(name = "Identifiable", namespace = "urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0", type = JAXBElement.class, required = false)
    protected List<JAXBElement<? extends IdentifiableType>> identifiable;

    /**
     * Gets the value of the identifiable property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a <CODE>set</CODE> method for the identifiable property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getIdentifiable().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link jakarta.xml.bind.JAXBElement }{@code <}{@link AdhocQueryType }{@code >}
     * {@link jakarta.xml.bind.JAXBElement }{@code <}{@link AssociationType1 }{@code >}
     * {@link jakarta.xml.bind.JAXBElement }{@code <}{@link AuditableEventType }{@code >}
     * {@link jakarta.xml.bind.JAXBElement }{@code <}{@link ClassificationNodeType }{@code >}
     * {@link jakarta.xml.bind.JAXBElement }{@code <}{@link oasis.names.tc.ebxml_regrep.xsd.rim._3.ClassificationSchemeType }{@code >}
     * {@link jakarta.xml.bind.JAXBElement }{@code <}{@link ClassificationType }{@code >}
     * {@link jakarta.xml.bind.JAXBElement }{@code <}{@link ExternalIdentifierType }{@code >}
     * {@link jakarta.xml.bind.JAXBElement }{@code <}{@link ExternalLinkType }{@code >}
     * {@link jakarta.xml.bind.JAXBElement }{@code <}{@link ExtrinsicObjectType }{@code >}
     * {@link jakarta.xml.bind.JAXBElement }{@code <}{@link FederationType }{@code >}
     * {@link jakarta.xml.bind.JAXBElement }{@code <}{@link IdentifiableType }{@code >}
     * {@link jakarta.xml.bind.JAXBElement }{@code <}{@link ObjectRefType }{@code >}
     * {@link jakarta.xml.bind.JAXBElement }{@code <}{@link OrganizationType }{@code >}
     * {@link jakarta.xml.bind.JAXBElement }{@code <}{@link PersonType }{@code >}
     * {@link jakarta.xml.bind.JAXBElement }{@code <}{@link RegistryObjectType }{@code >}
     * {@link jakarta.xml.bind.JAXBElement }{@code <}{@link RegistryPackageType }{@code >}
     * {@link jakarta.xml.bind.JAXBElement }{@code <}{@link RegistryType }{@code >}
     * {@link jakarta.xml.bind.JAXBElement }{@code <}{@link ServiceBindingType }{@code >}
     * {@link jakarta.xml.bind.JAXBElement }{@code <}{@link ServiceType }{@code >}
     * {@link jakarta.xml.bind.JAXBElement }{@code <}{@link SpecificationLinkType }{@code >}
     * {@link jakarta.xml.bind.JAXBElement }{@code <}{@link SubscriptionType }{@code >}
     * {@link jakarta.xml.bind.JAXBElement }{@code <}{@link UserType }{@code >}
     * 
     * 
     */
    public List<JAXBElement<? extends IdentifiableType>> getIdentifiable() {
        if (identifiable == null) {
            identifiable = new ArrayList<JAXBElement<? extends IdentifiableType>>();
        }
        return this.identifiable;
    }

    public RegistryObjectListType withIdentifiable(JAXBElement<? extends IdentifiableType> ... values) {
        if (values!= null) {
            for (JAXBElement<? extends IdentifiableType> value: values) {
                getIdentifiable().add(value);
            }
        }
        return this;
    }

    public RegistryObjectListType withIdentifiable(Collection<JAXBElement<? extends IdentifiableType>> values) {
        if (values!= null) {
            getIdentifiable().addAll(values);
        }
        return this;
    }

    @Override
    public boolean equals(Object object) {
        if ((object == null)||(this.getClass()!= object.getClass())) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final RegistryObjectListType that = ((RegistryObjectListType) object);
        {
            List<JAXBElement<? extends IdentifiableType>> leftIdentifiable;
            leftIdentifiable = (((this.identifiable!= null)&&(!this.identifiable.isEmpty()))?this.getIdentifiable():null);
            List<JAXBElement<? extends IdentifiableType>> rightIdentifiable;
            rightIdentifiable = (((that.identifiable!= null)&&(!that.identifiable.isEmpty()))?that.getIdentifiable():null);
            if ((this.identifiable!= null)&&(!this.identifiable.isEmpty())) {
                if ((that.identifiable!= null)&&(!that.identifiable.isEmpty())) {
                    if (!leftIdentifiable.equals(rightIdentifiable)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if ((that.identifiable!= null)&&(!that.identifiable.isEmpty())) {
                    return false;
                }
            }
        }
        return true;
    }

    @Override
    public int hashCode() {
        int currentHashCode = 1;
        {
            currentHashCode = (currentHashCode* 31);
            List<JAXBElement<? extends IdentifiableType>> theIdentifiable;
            theIdentifiable = (((this.identifiable!= null)&&(!this.identifiable.isEmpty()))?this.getIdentifiable():null);
            if ((this.identifiable!= null)&&(!this.identifiable.isEmpty())) {
                currentHashCode += theIdentifiable.hashCode();
            }
        }
        return currentHashCode;
    }

    /**
     * Generates a String representation of the contents of this type.
     * This is an extension method, produced by the 'ts' xjc plugin
     * 
     */
    @Override
    public String toString() {
        return ToStringBuilder.reflectionToString(this, JAXBToStringStyle.DEFAULT_STYLE);
    }

}
